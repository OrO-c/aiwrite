name: Build Debug APK

on:
  # 自动触发：推送到 develop 分支
  push:
    branches:
      - develop
      - main
    paths-ignore:
      - '**.md'
      - '.gitignore'
      - 'LICENSE'
  
  # PR 触发
  pull_request:
    branches:
      - main
      - develop
  
  # 手动触发
  workflow_dispatch:

env:
  GRADLE_OPTS: -Dorg.gradle.jvmargs="-Xmx3g -XX:+HeapDumpOnOutOfMemoryError"

jobs:
  build-debug:
    name: Build Debug APK
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
      
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
      
      - name: Setup Android SDK
        uses: android-actions/setup-android@v3
        with:
          api-level: 34
          build-tools: 34.0.0
      
      - name: Cache Gradle Dependencies
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
            .gradle
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-
      
      - name: Grant Execute Permission for gradlew
        run: chmod +x gradlew
      
      - name: Run Lint Check
        run: ./gradlew lintDebug
      
      - name: Run Unit Tests
        run: ./gradlew testDebugUnitTest
      
      - name: Build Debug APK
        run: ./gradlew assembleDebug
      
      - name: Upload Debug APK
        uses: actions/upload-artifact@v4
        with:
          name: debug-apk
          path: app/build/outputs/apk/debug/*.apk
          retention-days: 7
      
      - name: Upload Test Results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: test-results
          path: |
            app/build/reports/tests/
            app/build/reports/lint-results-debug.html
          retention-days: 7

  code-quality:
    name: Code Quality Check
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
      
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
      
      - name: Cache Gradle Dependencies
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
            .gradle
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-
      
      - name: Grant Execute Permission for gradlew
        run: chmod +x gradlew
      
      - name: Run Detekt
        run: |
          # 如果项目配置了 detekt，运行代码质量检查
          if grep -q "detekt" app/build.gradle; then
            ./gradlew detekt
          else
            echo "Detekt not configured, skipping"
          fi
      
      - name: Upload Code Quality Reports
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: code-quality-reports
          path: |
            app/build/reports/detekt/
          retention-days: 7